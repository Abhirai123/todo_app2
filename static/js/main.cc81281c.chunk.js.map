{"version":3,"sources":["logo.svg","component/Todo_list.js","component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo_list","props","useState","delitem","setCut","className","style","textDecoration","text","IconButton","color","onClick","Todo","item","setItem","itemlist","setList","deleteItem","id","prev","filter","arr","index","type","placeholder","onChange","e","target","value","required","Button","variant","map","onSubmit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAe,I,qDCsBAA,EAjBG,SAACC,GACf,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAgBC,EAAhB,KAKA,OACI,sBAAKC,UAAU,UAAf,UACI,oBAAIC,MAAO,CAACC,eAAgBJ,EAAS,eAAiB,QAAtD,SAAgEF,EAAMO,OACtE,cAACC,EAAA,EAAD,CAAYC,MAAM,YAAY,aAAW,SAASC,QAN1C,WACZP,GAAO,IAKH,SACG,cAAC,IAAD,U,yBCkCAQ,EA7CF,WAET,MAAwBV,qBAAxB,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAA4BZ,mBAAS,IAArC,mBAAOa,EAAP,KAAiBC,EAAjB,KAcMC,EAAa,SAACC,GAChBF,GAAQ,SAACG,GACL,OAAOA,EAAKC,QAAO,SAACC,EAAKC,GACrB,OAAOA,IAAUJ,SAI7B,OACI,gCACI,0CACA,gCACI,uBAAOK,KAAK,OAAOC,YAAY,aAAaC,SAvBxC,SAACC,GACbZ,EAAQY,EAAEC,OAAOC,QAsBuDA,MAAOf,EAAMgB,UAAQ,IACrF,cAACC,EAAA,EAAD,CAAQzB,UAAU,QAAQ0B,QAAQ,YAAYrB,MAAM,UAAUC,QApBhE,WACNK,GAAQ,SAACG,GACL,MAAM,GAAN,mBAAWA,GAAX,CAAiBN,OAGrBC,EAAQ,KAeA,SACA,cAAC,IAAD,MAEA,6BAEOC,EAASiB,KAAI,SAACnB,EAAKS,GACf,OAAQ,cAAC,EAAD,CAAWd,KAAMK,EAAMS,MAAOA,EAAOJ,GAAII,EAAOW,SAAUhB,gBCzB9EiB,MAVf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCIO8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cc81281c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst Todo_list = (props) => {\r\n    const [delitem, setCut] = useState(false)\r\n\r\n    const cutItem = ()=>{\r\n        setCut(true)\r\n    }\r\n    return (\r\n        <div className=\"delitem\">\r\n            <li style={{textDecoration: delitem ?\"line-through\" : \"none\"}}>{props.text}</li>\r\n            <IconButton color=\"secondary\" aria-label=\"delete\" onClick={cutItem}>\r\n               <DeleteIcon />\r\n            </IconButton>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo_list\r\n","import React, { useState } from 'react'\r\nimport Todo_list from './Todo_list';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst Todo = () => {\r\n\r\n    const [item, setItem] = useState();\r\n    const [itemlist, setList] = useState([]);\r\n\r\n    const  getValue=(e)=>{\r\n        setItem(e.target.value)\r\n    }\r\n\r\n    const add=()=>{\r\n        setList((prev)=>{\r\n            return [...prev, item]\r\n        })\r\n\r\n        setItem(\"\")\r\n    }\r\n\r\n    const deleteItem = (id)=>{\r\n        setList((prev)=>{\r\n            return prev.filter((arr, index)=>{\r\n                return index !== id\r\n            })\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Todo App</h1>\r\n            <div>\r\n                <input type=\"text\" placeholder=\"Add Item..\" onChange={getValue} value={item} required/>\r\n                <Button className=\"green\" variant=\"contained\" color=\"success\" onClick={add}>\r\n                <AddIcon />\r\n              </Button>\r\n                <ul>\r\n                   {\r\n                       itemlist.map((item,index)=>{\r\n                           return  <Todo_list text={item} index={index} id={index} onSubmit={deleteItem} />\r\n                       })\r\n                   }\r\n                </ul>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Todo from './component/Todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Todo />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}